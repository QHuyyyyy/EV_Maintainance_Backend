{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "EV Maintenance Backend API",
    "description": "Auto-generated API documentation for EV Maintenance System",
    "contact": {
      "name": "API Support",
      "email": "support@evmaintenance.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "User management and authentication endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search users",
        "description": "Search users by email or role",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Search completed successfully"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Search query is required",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "description": "Update user information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User updated successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "Permanently delete a user from the system",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users with filtering and pagination",
        "description": "Retrieve all users with optional filtering by role and status",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "enum": [
              "admin",
              "mechanic",
              "customer"
            ],
            "description": "Filter by user role"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "suspended"
            ],
            "description": "Filter by user status"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number (default: 1)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Items per page (default: 10)"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "schema": {
              "$ref": "#/definitions/UsersListResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "60f1b2b3c4e5f6g7h8i9j0k1"
        },
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "role": {
          "type": "string",
          "example": "customer"
        },
        "status": {
          "type": "string",
          "example": "active"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-21T10:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-09-21T10:00:00.000Z"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        },
        "role": {
          "type": "string",
          "example": "customer"
        },
        "status": {
          "type": "string",
          "example": "active"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "newemail@example.com"
        },
        "password": {
          "type": "string",
          "example": "newpassword123"
        },
        "role": {
          "type": "string",
          "example": "mechanic"
        },
        "status": {
          "type": "string",
          "example": "inactive"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "StatusUpdate": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "suspended"
        }
      },
      "required": [
        "status"
      ]
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Operation completed successfully"
        },
        "data": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Error message description"
        }
      }
    },
    "PaginationInfo": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "number",
          "example": 1
        },
        "total_pages": {
          "type": "number",
          "example": 5
        },
        "total_count": {
          "type": "number",
          "example": 23
        },
        "per_page": {
          "type": "number",
          "example": 10
        }
      }
    },
    "UsersListResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Users retrieved successfully"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationInfo"
        }
      }
    }
  }
}