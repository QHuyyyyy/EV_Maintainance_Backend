import cookieParser from "cookie-parser";
import cors from "cors";
import "dotenv/config";
import express from "express";
import logger from "morgan";
import swaggerUi from "swagger-ui-express";
import connect from "./database/db";
import userRoutes from "./routes/user.routes";

// Import swagger output file (will be generated by swagger-autogen)
const swaggerFile = require('./swagger-output.json');

// DB initialize
connect();

const app = express();

app.use(cors());
app.use(logger("dev"));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());

// Swagger documentation
const CSS_URL = 'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.1.0/swagger-ui.min.css';

const options = {
    customCssUrl: CSS_URL,
};
if (swaggerFile) {
    app.use('/api-docs', swaggerUi.serveFiles(swaggerFile, options), swaggerUi.setup(swaggerFile, {
        customCss: '.swagger-ui .topbar { display: true }',
        customSiteTitle: 'EV Maintenance API Documentation',
        swaggerOptions: {
            persistAuthorization: true,
            displayRequestDuration: true,
            docExpansion: 'list',
            filter: true,
            showExtensions: true,
            tryItOutEnabled: true,
        },
    }));
}

// API Routes
app.use('/api', userRoutes);

// Root route redirect to API docs
app.get('/', (req, res) => {
    res.redirect('/api-docs');
});

// 404 handler
app.use((req, res) => {
    res.status(404).json({
        success: false,
        message: 'Route not found'
    });
});

// Only listen in development or when not running as serverless
if (process.env.NODE_ENV !== 'production') {
    app.listen(process.env.PORT ?? 3000, () => {
        console.log(`App listening on port ${process.env.PORT || 3000}`);
    });
}

export default app;
